import {
    faCoins,
    faUsers,
    faServer,
    faCode,
    faUserAstronaut,
    faBuilding,
    faMagnifyingGlass,
    faBookOpen,
    faBug,
    faVolumeHigh,
    faShapes,
    faLockOpen,
    faListUl,
    faShoppingBasket,
    faHardDrive,
} from "@fortawesome/free-solid-svg-icons"

const dataProps = [
    {
        id: "providerProperties",
        providerProperties: [
            { value: "name", name: "Name" },
            { value: "stakeFromHome", name: "Yes!" },
            { value: "stakingType", name: "Staking type" },
            { value: "providerType", name: "Provider type" },
            { value: "reward", name: "Reward" },
            { value: "fee", name: "Fee" },
            { value: "links", name: "Links" },
            { value: "minStake", name: "Min stake" },
            { value: "validatorKey", name: "Validator key" },
            { value: "withdrawalKey", name: "Withdrawal key" },
            { value: "sourceCode", name: "Source code" },
            { value: "auditReports", name: "Audit reports" },
            { value: "bugBounty", name: "Bug bounty" },
            { value: "howToUse", name: "How to use" },
            { value: "mevRelays", name: "MEV relays" },
            { value: "executionClients", name: "Execution clients" },
            { value: "beaconClients", name: "Beacon clients" },
            { value: "solo", name: "Solo" },
            { value: "pooled", name: "Pooled" },
            { value: "managed", name: "Managed" },
            { value: "lst", name: "LST" },
            { value: "indexToken", name: "LST index" },
            { value: "hardware", name: "Hardware" },
            { value: "software", name: "Software" },
            { value: "saas", name: "SAAS" },
            { value: "userValidator", name: "User controlled" },
            { value: "service", name: "Service" },
            { value: "nodeOperator", name: "Node operator" },
            { value: "userWithdrawal", name: "User controlled" },
            { value: "smartContract", name: "Smart contract" },
            { value: "status", name: "Status" },
            { value: "dev", name: "In development" },
            { value: "active", name: "Active" },
            { value: "description", name: "Description" },
            { value: "mainnetLaunch", name: "Mainnet Launch" },
            { value: "no", name: "No" },
            { value: "other", name: "Other" },
            { value: "percentage", name: "Percentage" },
            { value: "eth", name: "ETH" },
            { value: "anyAmount", name: "Any Amount" },
            { value: "ratedId", name: "Rated Network ID" },
        ],
    },
    {
        id: "checklistProperties",
        checklistProperties: [
            {
                value: "howToUse",
                description: "Test",
            },
            {
                value: "sourceCode",
                description: "Source code description...",
            },
            {
                value: "auditReports",
                description: "Test",
            },
            {
                value: "bugBounty",
                description: "Test",
            },
            {
                value: "executionClients",
                description: "Test",
            },
            {
                value: "beaconClients",
                description: "Test",
            },
            {
                value: "mevRelays",
                description: "Test",
            },
        ],
    },
    {
        id: "keyOwnerProperties",
        keyOwnerProperties: [
            {
                value: "userValidator",
                description: "The user who created the validator has a copy of the validator key.",
            },
            {
                value: "service",
                description: "The service provider has a copy of the validator key.",
            },
            {
                value: "nodeOperator",
                description: "The node operator has a copy of the validator key.",
            },
            {
                value: "userWithdrawal",
                description: "The withdrawal key is directly controlled by the user.",
            },
            {
                value: "smartContract",
                description: "The withdrawal key is controlled by a smart contract.",
            },
        ],
    },
    {
        isTableHeader: true,
        type: "text",
        id: "name",
        name: "Name",
        headerText: "NAME",
    },
    {
        isTableHeader: true,
        type: "checkbox",
        id: "stakeFromHome",
        name: "Stake from home",
        headerText: "STAKE FROM <br /> HOME",
        options: [{ value: "stakeFromHome", color: "", icon: faServer }],
    },
    {
        isTableHeader: true,
        type: "checkboxType",
        id: "stakingType",
        name: "Staking Type",
        headerText: "STAKING <br /> TYPE",
        options: [
            {
                value: "solo",
                color: "green",
                description:
                    'Solo staking is the "gold standard" - the act of staking your Ethereum on nodes that you are running yourself (ideally from home), while retaining full custody of your ETH. Validators in this category are fully funded by yourself.',
                icon: faServer,
            },
            {
                value: "pooled",
                color: "blue",
                description:
                    "Pooled staking is when multiple stakeholders combine their resources to create a validator. By pooling resources, individuals who do not have the 32 ETH required for solo staking can still participate in the staking process.",
                icon: faUsers,
            },
            {
                value: "managed",
                color: "red",
                description: "Managed staking is where a third party manages the staking process on behalf of stakeholders.",
                icon: faUsers,
            },
            {
                value: "lst",
                color: "gold",
                description:
                    "Liquid Staking Tokens (LST) represent staked ETH and its rewards in a tokenized form. This provides liquidity to stakeholders as they can use these tokens to trade, as collateral, or in DeFi applications while still earning staking rewards.",
                icon: faCoins,
            },
            {
                value: "indexToken",
                color: "orange",
                description:
                    "Index Tokens represent a diversified portfolio of staking tokens, allowing users to stake across multiple staking protocols with a single token.",
                icon: faShoppingBasket,
            },
        ],
    },
    {
        isTableHeader: false,
        type: "checkboxType",
        id: "providerType",
        name: "Provider Type",
        headerText: "PROVIDER <br /> TYPE",
        options: [
            { value: "Hardware", color: "", icon: faHardDrive },
            { value: "No", color: "", icon: faHardDrive },
        ],
    },
    {
        isTableHeader: true,
        type: "other",
        id: "reward",
        name: "Reward",
        headerText: "30 DAY <br /> APR",
        options: [],
    },
    {
        isTableHeader: true,
        type: "other",
        id: "fee",
        name: "Fee",
        headerText: "FEE",
        options: [],
    },
    {
        isTableHeader: true,
        type: "other",
        id: "minStake",
        name: "Min Stake",
        headerText: "MINIMUM <br /> STAKE",
        options: [],
    },
    {
        isTableHeader: true,
        type: "other",
        id: "mainnetLaunch",
        name: "Mainnet Launch",
        headerText: "MAINNET <br /> LAUNCH",
        options: [],
    },
    {
        isTableHeader: false,
        type: "checkboxKeyOwner",
        id: "validatorKey",
        name: "Validator Key",
        headerText: "KEY <br /> OWNER",
        options: [
            { value: "userValidator", color: "green", icon: faUserAstronaut },
            { value: "service", color: "gold", icon: faBuilding },
            { value: "nodeOperator", color: "blue", icon: faServer },
        ],
    },
    {
        isTableHeader: false,
        id: "withdrawalKey",
        name: "Withdrawal Key",
        headerText: "",
        options: [
            { value: "userWithdrawal", color: "green", icon: faUserAstronaut },
            { value: "smartContract", color: "blue", icon: faCode },
        ],
    },
    {
        isTableHeader: true,
        type: "checkbox",
        id: "checklist",
        name: "Checklist",
        headerText: "DO YOUR OWN <br /> RESEARCH - LINKS",
        options: [
            { value: "howToUse", color: "", icon: faUsers },
            { value: "sourceCode", color: "", icon: faBookOpen },
            { value: "auditReports", color: "", icon: faMagnifyingGlass },
            { value: "bugBounty", color: "", icon: faBug },
            { value: "executionClients", color: "", icon: faShapes },
            { value: "beaconClients", color: "", icon: faListUl },
            { value: "mevRelays", color: "", icon: faVolumeHigh },
        ],
    },
]

export default dataProps
